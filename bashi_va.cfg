#
# BashiVA configuration file
#
#  BashiVA is a configuration file for HashiCorp's BashVaultAgent, 
#  a simple daemon written in Bash to mimic much of vault-agent's 
#  functionality. BashiVA ... 
#  - Logs into the HashiCorp Vault server via AppRole authentication
#  - Downloads secrets on behalf of an application
#  - Injects those secrets into the application by generating
#    an application native configuration file on disk that is based on 
#    a template, and signalling the application to refresh/restart
#    when changes are available
#
#  BashiVA was built to support AIX. 
#  It has been tested on AIX, Linux and MacOS.
#
#  Template Example:
#
#  If in Vault at the path identified by the "WEBDB" tag, 
#  the secret value of the "password" field is "tiger", then ...
#
#  This line of the config template
#    <password> {{ WEBDB::password }} </password>
#
#  Would be replaced by this line in the app config file
#    <password> tiger </password>
#
#  More help at the bottom of this file.
#

vault_address="http://35.231.130.66"
app_role_id="af927d37-d1c0-11c4-f9be-c619ccb7e4e6"


# Encryption settings
#
# Decryption is for reading encrypted environment variables. See -d option
# Encryption is for writing "re-encrypted" secrets into config files. See -e option
#
# There are two forms of encryption with the -e option: 
#   symmetric (shared secret key)
#   asymmetric (public key encryption, private key decryption) 
#
# To decrypt asymmetric cipher text in the config created with a public key:
#   echo "<cipher text>" | tr '\-_' '\n/' | openssl base64 -d | 
#     openssl rsautl -decrypt -inkey <private.key> -keyform pem
#
# To decrypt symmetric cipher text in config created with a shared secret password:
#   echo "<cipher text>" | tr '\-_' '\n/' | 
#     openssl enc -<cipher> -base64 -k <shared_password> [-salt | -nosalt] -d
#
cipher="aes-256-cbc"                     # Symetric cipher, see openssl list-cipher-commands 
decryption_password="password"           # For symmetric decryption of env
salted=true                              # true|false Symetric salt flag 
encryption_method="s"                    # s|a : symmetric or asymmetric encryption of secrets
encryption_password="password"           # For symmetric encryption of secrets
encryption_public_key_file="public.pem"  # For asymmetric encryption


# Polling interval in seconds. 
#
# The agent will connect to the vault cluster and download
# secrets at this frequency.
# It will also check for updates to application configuration files at 
# this frequency. 
# It will only write and signal those updates if a change has been made
# to the configuration.
#
refresh_interval=5

# Secret specifications
#
#   A list of specs, one per line
#
#   Format:
#    '<TEMPLATE_PREFIX>:<VAULT_PATH>:<FIELD>|<FIELD_TYPE>[:<FIELD>|<FIELD_TYPE>]'
#    where <FIELD_TYPE> is string, bool or number
#
declare -a secrets=(
'WEBAPP:mysql/webapp:username|string:password|string'
)


# Config file specifications
#
#   A list of specs, one per line
#
#   Format:
#    '<TEMPLATE_FILE>:<CONFIG_FILE>:<REFRESH_COMMAND>'
#
#
declare -a configs=(
'./example.tpl:./example.cfg:echo "BashiVA updated example.cfg!"'
)


#   Secret Specs
#    '<TEMPLATE_PREFIX>:<VAULT_PATH>:<FIELD>|<FIELD_TYPE>[:<FIELD>|<FIELD_TYPE>]'
#
#    Add each quoted specification on a new line between the parentheses. 
#    No commas necessary. Do not change format (maintain bash syntax).
#    You can declare as many fields in each vault path as you like.
#    BashiVA will download all the <FIELD>s you declare for processing.
#
#    <TEMPLATE_PREFIX> is a short tag for a <VAULT_PATH>.
#    It will be used in the configuration file template as a short hand
#    notation to identify the <VAULT_PATH> that a <FIELD> is found on.
#
#    <VAULT_PATH> is the mount point in vault for one or more secrets
#
#    <FIELD> is the particular secret key at that <VAULT_PATH>
#
#    <FIELD_TYPE> is the field value type: "string", "bool" or "number"
#
#
#   Config Specs
#    '<TEMPLATE_FILE>:<CONFIG_FILE>:<REFRESH_COMMAND>'
#
#    These are the configuration files and refresh/restart scripts associated with
#    each application being serviced by an agent.
#
#    <TEMPLATE_FILE> is the path to a configuration template
#
#    <CONFIG_FILE> is the path to the associated app configuration file
#
#    <REFRESH_COMMAND> is a custom bash script to refresh or restart
#    the app after the <CONFIG_FILE> has been updated
#
#   Template Files
#
#    A <TEMPLATE_FILE> should be a copy of the application's actual
#    <CONFIG_FILE> but with all secret values replaced by these tags:
#
#       {{ <TEMPLATE_PREFIX>::<FIELD> }}
#
#    The <TEMPLATE_PREFIX> associates the field with a particular
#    vault secrets path
#
#    The <FIELD> is the field name of the particular secret in vault.
#   
#    BashiVA will replace {{ <TEMPLATE_PREFIX>::<FIELD> }} with the value
#    associated with the field at that path.
#
